# Generated by Django 4.1.3 on 2023-05-02 00:32

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        ("taggit", "0005_auto_20220424_2025"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "slug",
                    models.SlugField(allow_unicode=True, max_length=100, unique=True),
                ),
                (
                    "description",
                    models.TextField(blank=True, max_length=300, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=300)),
                (
                    "slug",
                    models.SlugField(allow_unicode=True, max_length=100, unique=True),
                ),
                ("description", ckeditor.fields.RichTextField()),
                ("company_name", models.CharField(max_length=300)),
                (
                    "company_description",
                    ckeditor.fields.RichTextField(blank=True, null=True),
                ),
                ("vacancy", models.IntegerField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        default="default.jpg",
                        null=True,
                        upload_to="jobs/image",
                    ),
                ),
                ("location", models.CharField(default="Worldwide", max_length=300)),
                (
                    "job_type",
                    models.CharField(
                        choices=[
                            ("Full time", "Full time"),
                            ("Part time", "Part time"),
                            ("Internship", "Internship"),
                        ],
                        max_length=10,
                    ),
                ),
                ("salary", models.CharField(blank=True, max_length=30)),
                ("website_url", models.URLField()),
                ("deadline", models.DateField()),
                ("is_published", models.BooleanField(default=False)),
                ("is_closed", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Category",
                        to="main.category",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="User",
                        to="accounts.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Education",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ssc_group",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("science", "Science"),
                            ("commerce", "Commerce"),
                            ("arts", "Arts"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("ssc_year", models.DateField()),
                (
                    "ssc_board",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("dhaka", "Dhaka"),
                            ("rajshahi", "Rajshahi"),
                            ("comilla", "Comilla"),
                            ("jessore", "Jessore"),
                            ("chittagong", "Chittagong"),
                            ("barisal", "Barisal"),
                            ("sylhet", "Sylhet"),
                            ("dinajpur", "Dinajpur"),
                            ("madrasah", "Madrasah"),
                            ("technical", "Technical"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "ssc_institution",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("ssc_cgpa", models.FloatField()),
                (
                    "hsc_group",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("science", "Science"),
                            ("commerce", "Commerce"),
                            ("arts", "Arts"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("hsc_year", models.DateField()),
                (
                    "hsc_board",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("dhaka", "Dhaka"),
                            ("rajshahi", "Rajshahi"),
                            ("comilla", "Comilla"),
                            ("jessore", "Jessore"),
                            ("chittagong", "Chittagong"),
                            ("barisal", "Barisal"),
                            ("sylhet", "Sylhet"),
                            ("dinajpur", "Dinajpur"),
                            ("madrasah", "Madrasah"),
                            ("technical", "Technical"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("hsc_cgpa", models.IntegerField()),
                (
                    "hsc_institution",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("bsc_session", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "bsc_institution",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("bsc_graduation_year", models.DateField()),
                ("bsc_subject", models.CharField(blank=True, max_length=50, null=True)),
                ("bsc_cgpa", models.FloatField()),
                ("msc_session", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "msc_institution",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("msc_graduation_year", models.DateField()),
                ("msc_subject", models.CharField(blank=True, max_length=50, null=True)),
                ("msc_cgpa", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserEducation",
                        to="accounts.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", ckeditor.fields.RichTextField()),
                ("resume", models.FileField(upload_to="applicant/resume")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applications",
                        to="main.job",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applicantUser",
                        to="accounts.userprofile",
                    ),
                ),
            ],
        ),
    ]
